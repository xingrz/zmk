/*
 * Copyright (c) 2022 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <st/l4/stm32l432.dtsi>
#include <st/l4/stm32l432k(b-c)ux-pinctrl.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
#include <freq.h>
#include <mem.h>

/ {
    model = "Keychron Q1";
    compatible = "st,stm32l432kb";

    chosen {
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zephyr,console = &usart1;
        zmk,kscan = &kscan;
        zmk,matrix_transform = &default_transform;
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
    };

    gpio_ex: sn74hc595 {
        compatible = "ti,snx4hc595";
        label = "GPIO_EX";
        gpio-controller;
        #gpio-cells = <2>;
        ser-gpios = <&gpioa 7 0>;
        srclk-gpios = <&gpiob 1 0>;
        rclk-gpios = <&gpiob 0 0>;
    };

    kscan: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";

        diode-direction = "col2row";
        col-gpios = <&gpioc 14  GPIO_ACTIVE_LOW>,
                    <&gpioc 15  GPIO_ACTIVE_LOW>,
                    <&gpioa  0  GPIO_ACTIVE_LOW>,
                    <&gpioa  1  GPIO_ACTIVE_LOW>,
                    <&gpioa  2  GPIO_ACTIVE_LOW>,
                    <&gpioa  3  GPIO_ACTIVE_LOW>,
                    <&gpioa  4  GPIO_ACTIVE_LOW>,
                    <&gpioa  5  GPIO_ACTIVE_LOW>,
                    <&gpio_ex 0 GPIO_ACTIVE_LOW>,
                    <&gpio_ex 1 GPIO_ACTIVE_LOW>,
                    <&gpio_ex 2 GPIO_ACTIVE_LOW>,
                    <&gpio_ex 3 GPIO_ACTIVE_LOW>,
                    <&gpio_ex 4 GPIO_ACTIVE_LOW>,
                    <&gpio_ex 5 GPIO_ACTIVE_LOW>,
                    <&gpio_ex 6 GPIO_ACTIVE_LOW>,
                    <&gpio_ex 7 GPIO_ACTIVE_LOW>;
        row-gpios = <&gpiob  5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
                    <&gpiob  4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
                    <&gpiob  3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
                    <&gpioa 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
                    <&gpioa 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
                    <&gpioa 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
    };

    default_transform: keymap_transform {
        compatible = "zmk,matrix-transform";
        columns = <16>;
        rows = <6>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13)          RC(0,15)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)          RC(1,15)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13)          RC(2,15)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)          RC(3,13)          RC(3,15)
            RC(4,0)         RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11)          RC(4,13) RC(4,14)
            RC(5,0) RC(5,1) RC(5,2)         RC(5,4)         RC(5,6)                         RC(5,10) RC(5,11) RC(5,12) RC(5,13) RC(5,14) RC(5,15)
        >;
    };

    encoder: encoder {
        compatible = "alps,ec11";
        label = "ENCODER";
        a-gpios = <&gpioa 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        b-gpios = <&gpioa 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        resolution = <4>;
    };
};

&clk_hsi {
    status = "okay";
};

&pll {
    div-m = <1>;
    mul-n = <20>;
    div-p = <7>;
    div-q = <2>;
    div-r = <4>;
    clocks = <&clk_hsi>;
    status = "okay";
};

&rcc {
    clocks = <&pll>;
    clock-frequency = <DT_FREQ_M(80)>;
    ahb-prescaler = <1>;
    apb1-prescaler = <1>;
    apb2-prescaler = <1>;
};

&sram0 {
    reg = <0x20000000 DT_SIZE_K(48)>;
};

&flash0 {
    reg = <0x8000000 DT_SIZE_K(128)>;
};

&usb {
    status = "okay";
};

&usart1 {
    pinctrl-0 = <&usart1_tx_pa9>;
    pinctrl-names = "default";
    current-speed = <115200>;
    status = "okay";
};
